[project.urls]
"Homepage" = "https://github.com/OCXStandard/ocx-validator"
"Bug Tracker" = "https://github.com/OCXStandard/ocx-validator/issues"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ocx_validator"
version = "3.0.0rc2"
description = ""
authors = ["ocastrup <ole.christain.astrup@dnv.com>"]
readme = "README.md"
packages = [{include = "ocx_validator"}]

[tool.poetry.dependencies]
python = "^3.11"
packaging = "^23.1"
tbump= '*'


[tool.tbump]
# Uncomment this if your project is hosted on GitHub:
github_url = "https://github.com/OCXStandard/ocx-validator"

[tool.tbump.version]
current = "3.0.0rc2"

# Example of a semver regexp.
# Make sure this matches current_version before
# using tbump
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  (
    (?P<extra>.+)
  )?
  '''


[[tool.tbump.field]]
# the name of the field
name = "extra"
# the default value to use, if there is no match
default = ""

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

# For each file to patch, add a [[tool.tbump.file]] config
# section containing the path of the file, relative to the
# tbump.toml location.

[[tool.tbump.file]]
src = "pyproject.toml"

[[tool.tbump.file]]
src = "Dockerfile"
search = 'ENV validator.identifier "{current_version}"'


[[tool.tbump.file]]
src = "resources/schematron/schematron.properties"
search ='validator.report.validationServiceVersion = {current_version}'

[[tool.tbump.file]]
src = "resources/ocx/ocx.properties"
search ='validator.report.validationServiceVersion = {current_version}'


# You can specify a list of commands to
# run after the files have been patched
# and before the git commit is made

#[[tool.tbump.before_commit]]
#name = "Insert new xsdata package name"
#cmd = "python xsdata_package.py {new_version}"
#
##[[tool.tbump.before_commit]]
##name = "Cd to ./ocx"
##cmd = "cd ./ocx"
##
##[[tool.tbump.before_commit]]
##name = "Generate data-bindings."
##cmd = "xsdata generate OCX_Schema.xsd"
##
##[[tool.tbump.before_commit]]
##name = "Cd to .."
##cmd = "cd .."
#
#[[tool.tbump.before_commit]]
#name = "Add generated files to commit."
#cmd = "git add ./ocx_*"
#
#[[tool.tbump.before_commit]]
#name = "Insert version string in databinding."
#cmd = "python insert_version.py {new_version}"

# Or run some commands after the git tag and the branch
# have been pushed:
#  [[tool.tbump.after_push]]
#  name = "publish"
#  cmd = "./publish.sh"
